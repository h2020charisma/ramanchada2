[tox]
env_list = clean, py311, mypy, black, usort, flake8, docs

[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311, mypy, black, usort, flake8, docs
    3.12: py312

[flake8]
max-line-length = 119
per-file-ignores =
    __init__.py: F401, F403

[coverage:run]
relative_files = true
source =
    ramanchada2
    tests

[coverage:paths]
source =
    src
    */site-packages

[testenv]
deps =
    pytest
    pytest-cov
change_dir = {toxinidir}
pass_env = COVERAGE_FILE
commands = pytest --cov {posargs}

[testenv:quick]
commands =
    pytest \
        --deselect tests/peak/pearson4_test.py::test_generate_and_fit_noise \
        --deselect tests/peak/pearson4_test.py::test_generate_and_fit_noise_shift \
        --deselect tests/protocols/test_twinning.py::test_twinning \
        --ignore tests/protocols/test_calibrationmodel.py

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:mypy]
base_python = python3.11
deps = mypy
commands = mypy src tests

[testenv:black]
base_python = python3.11
deps=black
commands =
    black \
        scripts \
        src/ramanchada2/auxiliary/spectra/datasets2/__init__.py \
        src/ramanchada2/protocols/calibration/__init__.py \
        src/ramanchada2/protocols/metadata_helper.py \
        src/ramanchada2/protocols/spectraframe.py \
        src/ramanchada2/protocols/twinning.py \
        tests/protocols/test_calibrationmodel.py \
        tests/protocols/test_metadataextractor.py \
        tests/protocols/test_twinning.py

[testenv:usort]
base_python = python3.11
deps=usort
commands =
    usort format \
        scripts \
        src/ramanchada2/auxiliary/spectra/datasets2/__init__.py \
        src/ramanchada2/protocols/calibration/calibration_component.py \
        src/ramanchada2/protocols/calibration/calibration_model.py \
        src/ramanchada2/protocols/calibration/xcalibration.py \
        src/ramanchada2/protocols/calibration/ycalibration.py \
        src/ramanchada2/protocols/metadata_helper.py \
        src/ramanchada2/protocols/spectraframe.py \
        src/ramanchada2/protocols/twinning.py \
        tests/protocols/test_calibrationmodel.py \
        tests/protocols/test_metadataextractor.py \
        tests/protocols/test_twinning.py

[testenv:flake8]
base_python = python3.11
deps = flake8
commands = flake8 scripts src tests

[testenv:docs]
base_python = python3.11
deps = pdoc
commands =
    python scripts/gen-decorated-docs.py
    pdoc ramanchada2 -o {toxinidir}/docs/_build --math --docformat google

[testenv:ipynb]
deps = jupyter
whitelist_externals = bash
commands = bash -c 'for ipynb in {toxinidir}/examples/*.ipynb; do jupyter nbconvert --to python $ipynb --stdout|python; done'
